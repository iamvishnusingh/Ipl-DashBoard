{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","winner","className","to","date","venue","resultMargin","result","player_of_match","umpire1","umpire2","MatchSmallCard","result_margin","TeamPage","useParams","useState","matches","team","setTeam","useEffect","fetchMatches","a","fetch","response","json","data","console","log","title","value","totalWins","color","totalMatches","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ef133a5.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport \"./MatchDetailCard.scss\"\r\n\r\nfunction MatchDetailCard({teamName,match}) {\r\n    if(!match) return null;\r\n    const otherTeam=match.team1===teamName ?match.team2:match.team1;\r\n    const otherTeamRoute=`/teams/${otherTeam}`;\r\n    const isMatchWon=teamName===match.winner;\r\n    return (\r\n        \r\n        <div className={isMatchWon?'MatchDetailCard won-card':'MatchDetailCard lost-card'}>\r\n        <div>\r\n            <span className='vs'>VS  </span>\r\n\r\n            <h1>    <Link to={otherTeamRoute}> {otherTeam} </Link></h1>\r\n            <h2 className='match-date'>{match.date}</h2>\r\n            <h3 className='match-venue'>{match.venue}</h3>\r\n            <h3 className='match-result'>{match.winner} Won By {match.resultMargin} {match.result}</h3>\r\n        </div>\r\n            <div className='additional-detail'>\r\n                <h3>First Innings</h3>\r\n                <p>{match.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p>{match.team2}</p>\r\n                <h3>Man Of The Match</h3>\r\n                <p>{match.player_of_match}</p>\r\n                <h3>Umpires</h3>\r\n                <p>{match.umpire1} , {match.umpire2}</p>\r\n            </div>\r\n\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatchDetailCard\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './MatchDetailCard.scss'\r\n\r\nfunction MatchSmallCard({teamName,match}) {\r\n    if(!match) return null;\r\n    const otherTeam=match.team1===teamName ?match.team2:match.team1;\r\n    const otherTeamRoute=`/teams/${otherTeam}`;\r\n    const isMatchWon=teamName===match.winner;\r\n    return (\r\n        <div className={isMatchWon?'MatchSmallCard won-card':'MatchSmallCard lost-card'}>\r\n\r\n        <span className='vs'>Vs</span>\r\n        <h1><Link to={otherTeamRoute}> {otherTeam} </Link></h1>\r\n        <p className='match-result'> {match.winner} Won By {match.result_margin} {match.result}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatchSmallCard\r\n","import React, { useEffect, useState } from 'react'\r\nimport MatchDetailCard from '../components/MatchDetailCard'\r\nimport MatchSmallCard from '../components/MatchSmallCard'\r\nimport {useParams,Link} from 'react-router-dom';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport './TeamPage.scss';\r\n\r\nfunction TeamPage() {\r\n    const {teamName}=useParams();\r\n    const [team,setTeam]=useState({matches:[]});\r\n   \r\n\r\n    useEffect(\r\n        ()=>{\r\n            const fetchMatches=async()=>{\r\n                const response=await fetch(`/team/${teamName}`);\r\n                const data=await response.json();\r\n                console.log(data)\r\n                setTeam(data);\r\n            }\r\n            fetchMatches();\r\n\r\n        },[teamName]\r\n    );\r\n\r\n    if(!team || !team.teamName){\r\n        return <h1>Team Not Found</h1>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"TeamPage\">\r\n        <div className=\"team-name-section\">\r\n        <div className=\"Home\">\r\n        <Link to={`/`}> Home</Link>\r\n       </div>\r\n        <h1 className=\"team-name\">{team.teamName}</h1></div>\r\n            \r\n            <div className=\"win-loss-section\">Win /Losses\r\n            <PieChart\r\n                    data={[\r\n                        { title: 'Wins', value:team.totalWins , color: '#4da375' },\r\n                        { title: 'Losses', value: team.totalMatches- team.totalWins, color: '#a34d5d' },\r\n                        \r\n                    ]}\r\n            />\r\n            </div>\r\n            <div className=\"match-detail-section\">\r\n            <h3>Latest Matches</h3>\r\n            <MatchDetailCard  teamName={team.teamName} match={team.matches[0]}/>\r\n            </div>\r\n            {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n            <div className=\"more-link\">\r\n        <Link to={`/teams/${teamName}/matches/2020`}> Latest Matches</Link>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamPage\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n    \r\n    let years = [];\r\n    const startYear = 2008;\r\n    const endYear = 2020;\r\n\r\n    for (let i = startYear; i <= endYear; i++ ) {\r\n        years.push(i);\r\n    }\r\n\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n        { years.map(year => (\r\n            <li key={year}>\r\n                <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n            </li>\r\n        )) }\r\n        </ol>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport MatchDetailCard from '../components/MatchDetailCard';\r\nimport {useParams} from 'react-router-dom';\r\nimport \"./MatchPage.scss\"\r\nimport { YearSelector } from '../components/YearSelector';\r\nfunction MatchPage() {\r\n\r\n    const [matches,setMatches]=useState([]);\r\n    const {teamName,year}=useParams();\r\n    \r\n    useEffect(\r\n        ()=>{\r\n            const fetchMatches=async ()=>{\r\n                const response= await fetch(`/team/${teamName}/matches?year=${year}`);\r\n                const data=await response.json();\r\n                setMatches(data);\r\n            };\r\n            fetchMatches();\r\n\r\n    },[teamName,year]\r\n    )\r\n    return (\r\n        <div className=\"MatchPage\">\r\n        <div className=\"year-selector\">\r\n                <h3> Select Year </h3>\r\n                <YearSelector teamName={teamName} />\r\n            </div>\r\n        <div>\r\n            <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n            {\r\n                matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n            }\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default MatchPage\r\n","import {React} from \"react\"\r\nimport \"./TeamTile.scss\"\r\nimport {Link} from 'react-router-dom'\r\nexport const TeamTile=({teamName})=>{\r\n  return (\r\n      <div className=\"TeamTile\">\r\n              <h1>\r\n              <Link to={`/teams/${teamName}`}>{teamName}</Link></h1>\r\n      </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport \"./HomePage.scss\";\r\nimport { TeamTile } from '../components/TeamTile';\r\n\r\nfunction HomePage() {\r\n    const [teams,setTeams]=useState([]);\r\n   \r\n\r\n    useEffect(\r\n        ()=>{\r\n            const fetchAllTeams=async()=>{\r\n                const response=await fetch(`/team`);\r\n                const data=await response.json();\r\n                console.log(data)\r\n                setTeams(data);\r\n            }\r\n            fetchAllTeams();\r\n\r\n        },[]\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n        <div className=\"Header-section\">\r\n        <h1 className=\"app-name\">Crico IPL DashBoard</h1></div>   \r\n        <div className='team-grid'>\r\n        {teams.map(team=><TeamTile teamName={team.teamName}/>)}\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","\nimport './App.scss';\nimport { HashRouter as Router, Routes,Route} from \"react-router-dom\";\nimport TeamPage from './pages/TeamPage';\nimport MatchPage from './pages/MatchPage';\nimport HomePage from './pages/HomePage'\nfunction App() {\n  return (\n    <div className=\"App\">\n    \n    <Router>\n    <Routes>\n    <Route path=\"/teams/:teamName/matches/:year\" element={<MatchPage />}>\n\n    </Route>\n    <Route path=\"/teams/:teamName\" element={<TeamPage />}>\n    </Route>\n    <Route path=\"/\" element={<HomePage/>}>\n\n    </Route>\n    </Routes>\n    </Router>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}